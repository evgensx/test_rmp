Разработать три класса, которые следует связать между собой, используя наследование:

Класс Product, который имеет 4(не три) элемент-данных — имя (не пустое, не более 30 символов), категория (не пустое, не более 30 символов), цена (не отрицательна, float) и вес товара (не отрицательный, float) (базовый класс для всех классов);

Класс  Buy, содержащий данные о количестве покупаемого товара в штуках, о цене за весь купленный товар и о весе товара (производный класс для класса Product и базовый класс для класса Check);

Класс Check, не содержащий никаких элемент-данных. Данный класс должен выводить на экран информацию о товаре и о покупке ( производный класс для класса Buy);


Для взаимодействия с данными классов разработать set- и get—методы. Все элемент-данные классов объявлять как private.

Условия:
1. Исходные данные по товарам считывать из json файла.
2. При считывании данных из json данные должны быть валидированы, сообщения об ошибках выводится в окно терминала.
3. Через терминал должна быть возможность изменить цену, вес и название товара, с сохранением данных в исходный json файл.
4. Через терминал должна быть возможность осуществить "покупку" товара.
5. Через терминал должна быть возможность ввода команды на различный вывод списка товаров в отсортированном виде. Реализовать мимимум два алгоритма сортировки (не использовать готовые реализации из библиотек) по следующим полям - по цене, названию, категории товара.
6. Через терминал должна быть возможность осуществить поиск товара по названию и категории.
7. Через терминал должна быть возможность осуществить поиск товара с одинаковой ценой с минимальными временными затратами.
В json файле должна содержаться информация минимум о 30 товарах.

Использовать стандарт c++17, систему сборки CMake, ОС Linux.
